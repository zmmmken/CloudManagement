import random
import smtplib
import string

from PyQt5 import QtCore, QtGui, QtWidgets

from dataBase import Database
from operating_system import OperatingSystem
from platformdata import PlatformData
from user import User

stack = []


class Ui_Form(object):

    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(838, 620)
        self.stackedWidget = QtWidgets.QStackedWidget(Form)
        self.stackedWidget.setGeometry(QtCore.QRect(0, 0, 831, 601))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.stackedWidget.sizePolicy().hasHeightForWidth())
        self.stackedWidget.setSizePolicy(sizePolicy)
        self.stackedWidget.setObjectName("stackedWidget")
        self.page = QtWidgets.QWidget()
        self.page.setObjectName("page")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.page)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(20, 10, 791, 591))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.formLayout = QtWidgets.QFormLayout()
        self.formLayout.setObjectName("formLayout")
        self.label = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label.setObjectName("label")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.label)
        self.username = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.username.setObjectName("username")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.username)
        self.label_2 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_2.setObjectName("label_2")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.label_2)
        self.password = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.password.setObjectName("password")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.password)
        self.forgot_btn = QtWidgets.QCommandLinkButton(self.verticalLayoutWidget)
        self.forgot_btn.setObjectName("forgot_btn")
        self.forgot_btn.clicked.connect(lambda: self.password_mail())
        self.formLayout.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.forgot_btn)
        self.is_admin = QtWidgets.QCheckBox(self.verticalLayoutWidget)
        self.is_admin.setObjectName("is_admin")
        self.formLayout.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.is_admin)
        self.verticalLayout.addLayout(self.formLayout)
        self.login_btn = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.login_btn.setObjectName("login_btn")
        self.login_btn.clicked.connect(lambda: self.checkLogin())
        self.verticalLayout.addWidget(self.login_btn)
        self.register_btn = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.register_btn.setObjectName("register_btn")
        self.register_btn.clicked.connect(lambda: self.navigate_register())
        self.verticalLayout.addWidget(self.register_btn)
        self.stackedWidget.addWidget(self.page)
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setObjectName("page_2")
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.page_2)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(10, 0, 811, 591))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_6 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_6.setObjectName("label_6")
        self.verticalLayout_2.addWidget(self.label_6)
        self.formLayout_2 = QtWidgets.QFormLayout()
        self.formLayout_2.setObjectName("formLayout_2")
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.formLayout_2.setItem(0, QtWidgets.QFormLayout.LabelRole, spacerItem)
        self.label_3 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_3.setObjectName("label_3")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_3)
        self.register_passportid = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.register_passportid.setObjectName("register_passportid")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.register_passportid)
        self.label_4 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_4.setObjectName("label_4")
        self.formLayout_2.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_4)
        self.register_name = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.register_name.setObjectName("register_name")
        self.formLayout_2.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.register_name)
        self.label_5 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_5.setObjectName("label_5")
        self.formLayout_2.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_5)
        self.register_family = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.register_family.setObjectName("register_family")
        self.formLayout_2.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.register_family)
        self.label_7 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_7.setObjectName("label_7")
        self.formLayout_2.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_7)
        self.register_email = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.register_email.setObjectName("register_email")
        self.formLayout_2.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.register_email)
        self.label_8 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_8.setObjectName("label_8")
        self.formLayout_2.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_8)
        self.register_balance = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.register_balance.setObjectName("register_balance")
        self.formLayout_2.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.register_balance)
        self.label_24 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_24.setObjectName("label_24")
        self.formLayout_2.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.label_24)
        self.register_is_admin = QtWidgets.QCheckBox(self.verticalLayoutWidget_2)
        self.register_is_admin.setObjectName("register_is_admin")
        self.register_is_admin.clicked.connect(lambda: self.register_admin_select())
        self.formLayout_2.setWidget(7, QtWidgets.QFormLayout.LabelRole, self.register_is_admin)
        self.register_password = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.register_password.setObjectName("reagister_password")
        self.formLayout_2.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.register_password)
        self.verticalLayout_2.addLayout(self.formLayout_2)
        self.registerValid = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.registerValid.setEnabled(False)
        self.registerValid.setObjectName("registerValid")
        self.verticalLayout_2.addWidget(self.registerValid)
        self.signup_btn = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        self.signup_btn.setObjectName("signup_btn")
        self.verticalLayout_2.addWidget(self.signup_btn)
        self.stackedWidget.addWidget(self.page_2)
        self.page_3 = QtWidgets.QWidget()
        self.page_3.setObjectName("page_3")
        self.verticalLayoutWidget_3 = QtWidgets.QWidget(self.page_3)
        self.verticalLayoutWidget_3.setGeometry(QtCore.QRect(10, 0, 821, 601))
        self.verticalLayoutWidget_3.setObjectName("verticalLayoutWidget_3")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_3)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.create_platform_back = QtWidgets.QCommandLinkButton(self.verticalLayoutWidget_3)
        self.create_platform_back.setObjectName("commandLinkButton_2")
        self.create_platform_back.clicked.connect(lambda: self.navigate_last_page())
        self.horizontalLayout_7.addWidget(self.create_platform_back)
        self.label_9 = QtWidgets.QLabel(self.verticalLayoutWidget_3)
        self.label_9.setObjectName("label_9")
        self.horizontalLayout_7.addWidget(self.label_9)
        self.verticalLayout_3.addLayout(self.horizontalLayout_7)
        self.formLayout_3 = QtWidgets.QFormLayout()
        self.formLayout_3.setObjectName("formLayout_3")
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.formLayout_3.setItem(0, QtWidgets.QFormLayout.LabelRole, spacerItem1)
        self.label_10 = QtWidgets.QLabel(self.verticalLayoutWidget_3)
        self.label_10.setObjectName("label_10")
        self.formLayout_3.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_10)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        # create new platform

        # for i in range(len(self.os_list)):
        #     operating = QtWidgets.QRadioButton(self.verticalLayoutWidget_3)
        #     operating.setChecked(False)
        #     operating.setObjectName(self.os_list[i].name)
        #     operating.setText(self.os_list[i].name)
        #     operating.clicked.connect(lambda: self.select_os(i))
        #     self.horizontalLayout.addWidget(operating[i])

        self.formLayout_3.setLayout(1, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_11 = QtWidgets.QLabel(self.verticalLayoutWidget_3)
        self.label_11.setObjectName("label_11")
        self.horizontalLayout_2.addWidget(self.label_11)
        self.label_12 = QtWidgets.QLabel(self.verticalLayoutWidget_3)
        self.label_12.setObjectName("label_12")
        self.horizontalLayout_2.addWidget(self.label_12)
        self.ram = QtWidgets.QLineEdit(self.verticalLayoutWidget_3)
        self.ram.setObjectName("ram")
        self.horizontalLayout_2.addWidget(self.ram)
        self.formLayout_3.setLayout(2, QtWidgets.QFormLayout.SpanningRole, self.horizontalLayout_2)
        self.label_13 = QtWidgets.QLabel(self.verticalLayoutWidget_3)
        self.label_13.setObjectName("label_13")
        self.formLayout_3.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_13)
        self.cpu_core = QtWidgets.QLineEdit(self.verticalLayoutWidget_3)
        self.cpu_core.setObjectName("cpu_core")
        self.formLayout_3.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.cpu_core)
        self.label_14 = QtWidgets.QLabel(self.verticalLayoutWidget_3)
        self.label_14.setObjectName("label_14")
        self.formLayout_3.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_14)
        self.cpu_rate = QtWidgets.QLineEdit(self.verticalLayoutWidget_3)
        self.cpu_rate.setObjectName("cpu_rate")
        self.formLayout_3.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.cpu_rate)
        self.label_15 = QtWidgets.QLabel(self.verticalLayoutWidget_3)
        self.label_15.setObjectName("label_15")
        self.formLayout_3.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_15)
        self.band_width = QtWidgets.QLineEdit(self.verticalLayoutWidget_3)
        self.band_width.setObjectName("band_width")
        self.formLayout_3.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.band_width)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.formLayout_3.setItem(7, QtWidgets.QFormLayout.FieldRole, spacerItem2)
        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.formLayout_3.setItem(8, QtWidgets.QFormLayout.FieldRole, spacerItem3)
        self.line = QtWidgets.QFrame(self.verticalLayoutWidget_3)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.formLayout_3.setWidget(9, QtWidgets.QFormLayout.LabelRole, self.line)
        self.platform_create = QtWidgets.QPushButton(self.verticalLayoutWidget_3)
        self.platform_create.setObjectName("platform_create")
        self.platform_create.clicked.connect(lambda: self.create_platform())
        self.formLayout_3.setWidget(10, QtWidgets.QFormLayout.SpanningRole, self.platform_create)
        self.storage_2 = QtWidgets.QLineEdit(self.verticalLayoutWidget_3)
        self.storage_2.setObjectName("storage_2")
        self.formLayout_3.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.storage_2)
        self.storage = QtWidgets.QLabel(self.verticalLayoutWidget_3)
        self.storage.setObjectName("storage")
        self.formLayout_3.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.storage)
        self.verticalLayout_3.addLayout(self.formLayout_3)
        # self.formLayout_3.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.storage_label)
        self.update_platform_screen = QtWidgets.QPushButton(self.verticalLayoutWidget_3)
        self.update_platform_screen.setObjectName("update_platform_screen")
        self.update_platform_screen.clicked.connect(lambda: self.navigate_update_platform())
        self.formLayout_3.setWidget(11, QtWidgets.QFormLayout.SpanningRole, self.update_platform_screen)
        self.verticalLayout_3.addLayout(self.formLayout_3)
        self.stackedWidget.addWidget(self.page_3)
        self.page_4 = QtWidgets.QWidget()
        self.page_4.setObjectName("page_4")
        self.gridLayoutWidget = QtWidgets.QWidget(self.page_4)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(0, 0, 831, 601))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.all_platform_page = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.all_platform_page.setObjectName("all_platform_page")
        self.all_platform_page.clicked.connect(lambda: self.navigate_update_cloud(self.user.is_admin,passport_id=self.user.passport_id))
        self.gridLayout.addWidget(self.all_platform_page, 2, 0, 1, 1)
        self.create_platform_page = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.create_platform_page.setObjectName("create_platform_page")
        self.create_platform_page.clicked.connect(lambda: self.navigate_new_platform())
        self.gridLayout.addWidget(self.create_platform_page, 0, 0, 1, 1)
        self.add_tikets_page = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.add_tikets_page.setObjectName("add_tikets_page")
        self.gridLayout.addWidget(self.add_tikets_page, 4, 0, 1, 1)
        self.sign_out_btn = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.sign_out_btn.setObjectName("sign_out_btn")
        self.sign_out_btn.clicked.connect(lambda: self.sign_out())
        self.gridLayout.addWidget(self.sign_out_btn, 8, 0, 1, 1)
        self.settings_page = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.settings_page.setObjectName("settings_page")
        self.gridLayout.addWidget(self.settings_page, 7, 0, 1, 1)
        self.show_ticket_page = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.show_ticket_page.setObjectName("show_ticket_page")
        self.show_ticket_page.clicked.connect(lambda: self.navigate_tickets())
        self.gridLayout.addWidget(self.show_ticket_page, 5, 0, 1, 1)
        self.all_users_btn = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.all_users_btn.setObjectName("all_users_btn")
        self.all_users_btn.clicked.connect(lambda: self.navigate_all_users())
        self.gridLayout.addWidget(self.all_users_btn, 6, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_4)
        self.page_6 = QtWidgets.QWidget()
        self.page_6.setObjectName("page_6")
        self.verticalLayoutWidget_4 = QtWidgets.QWidget(self.page_6)
        self.verticalLayoutWidget_4.setGeometry(QtCore.QRect(20, 0, 811, 591))
        self.verticalLayoutWidget_4.setObjectName("verticalLayoutWidget_4")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_4)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.account_settings_back = QtWidgets.QCommandLinkButton(self.verticalLayoutWidget_4)
        self.account_settings_back.setObjectName("account_settings_back")
        self.account_settings_back.clicked.connect(lambda: self.navigate_last_page())
        self.horizontalLayout_4.addWidget(self.account_settings_back)
        self.label_22 = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.label_22.setObjectName("label_22")
        self.horizontalLayout_4.addWidget(self.label_22)
        self.verticalLayout_4.addLayout(self.horizontalLayout_4)
        self.label_16 = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.label_16.setObjectName("label_16")
        self.verticalLayout_4.addWidget(self.label_16)
        self.formLayout_4 = QtWidgets.QFormLayout()
        self.formLayout_4.setObjectName("formLayout_4")
        self.label_17 = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.label_17.setObjectName("label_17")
        self.formLayout_4.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_17)
        self.settings_passportid = QtWidgets.QLineEdit(self.verticalLayoutWidget_4)
        self.settings_passportid.setObjectName("settings_passportid")
        self.formLayout_4.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.settings_passportid)
        self.label_18 = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.label_18.setObjectName("label_18")
        self.formLayout_4.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_18)
        self.settings_name = QtWidgets.QLineEdit(self.verticalLayoutWidget_4)
        self.settings_name.setObjectName("settings_name")
        self.formLayout_4.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.settings_name)
        self.label_19 = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.label_19.setObjectName("label_19")
        self.formLayout_4.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_19)
        self.settings_family = QtWidgets.QLineEdit(self.verticalLayoutWidget_4)
        self.settings_family.setObjectName("settings_family")
        self.formLayout_4.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.settings_family)
        self.label_20 = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.label_20.setObjectName("label_20")
        self.formLayout_4.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_20)
        self.settings_email = QtWidgets.QLineEdit(self.verticalLayoutWidget_4)
        self.settings_email.setObjectName("settings_email")
        self.formLayout_4.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.settings_email)
        self.label_21 = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.label_21.setObjectName("label_21")
        self.formLayout_4.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_21)
        self.settings_balance = QtWidgets.QLineEdit(self.verticalLayoutWidget_4)
        self.settings_balance.setObjectName("settings_balance")
        self.formLayout_4.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.settings_balance)
        spacerItem4 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.formLayout_4.setItem(0, QtWidgets.QFormLayout.LabelRole, spacerItem4)
        self.label_23 = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.label_23.setObjectName("label_23")
        self.formLayout_4.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.label_23)
        self.settings_10 = QtWidgets.QLineEdit(self.verticalLayoutWidget_4)
        self.settings_10.setObjectName("settings_10")
        self.formLayout_4.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.settings_10)
        self.verticalLayout_4.addLayout(self.formLayout_4)
        self.signUp_2 = QtWidgets.QPushButton(self.verticalLayoutWidget_4)
        self.signUp_2.setObjectName("signUp_2")
        self.verticalLayout_4.addWidget(self.signUp_2)
        self.settings_delete = QtWidgets.QPushButton(self.verticalLayoutWidget_4)
        self.settings_delete.setObjectName("pushButton_6")
        self.settings_delete.clicked.connect(lambda: self.delete_user())
        self.verticalLayout_4.addWidget(self.settings_delete)
        self.stackedWidget.addWidget(self.page_6)
        self.page_5 = QtWidgets.QWidget()
        self.page_5.setObjectName("page_5")
        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(self.page_5)
        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(0, 0, 831, 601))
        self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_2)
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.formLayout_6 = QtWidgets.QFormLayout()
        self.formLayout_6.setObjectName("formLayout_6")
        self.label_29 = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.label_29.setObjectName("label_29")
        self.formLayout_6.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_29)
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")

        # for i in self.os_list:
        #     operating = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)
        #     operating.setChecked(False)
        #     operating.setObjectName(i.name)
        #     operating.setText(i.name)
        #     self.horizontalLayout_8.addWidget(operating)
        #     self.operating_system1.append(operating)
        #
        self.windows_3 = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)
        self.windows_3.setChecked(False)
        self.windows_3.setObjectName("windows_3")
        self.horizontalLayout_8.addWidget(self.windows_3)
        self.linux_3 = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)
        self.linux_3.setChecked(True)
        self.linux_3.setObjectName("linux_3")
        self.horizontalLayout_8.addWidget(self.linux_3)
        self.mac_3 = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)
        self.mac_3.setObjectName("mac_3")
        self.horizontalLayout_8.addWidget(self.mac_3)
        self.formLayout_6.setLayout(1, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_8)
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.label_30 = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.label_30.setObjectName("label_30")
        self.horizontalLayout_9.addWidget(self.label_30)
        self.label_31 = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.label_31.setObjectName("label_31")
        self.horizontalLayout_9.addWidget(self.label_31)
        self.ram_update = QtWidgets.QLineEdit(self.horizontalLayoutWidget_2)
        self.ram_update.setObjectName("ram_update")
        self.horizontalLayout_9.addWidget(self.ram_update)
        self.formLayout_6.setLayout(2, QtWidgets.QFormLayout.SpanningRole, self.horizontalLayout_9)
        self.label_32 = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.label_32.setObjectName("label_32")
        self.formLayout_6.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_32)
        self.cpu_core_update = QtWidgets.QLineEdit(self.horizontalLayoutWidget_2)
        self.cpu_core_update.setObjectName("cpu_core_update")
        self.formLayout_6.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.cpu_core_update)
        self.label_33 = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.label_33.setObjectName("label_33")
        self.formLayout_6.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_33)
        self.cpu_rate_update = QtWidgets.QLineEdit(self.horizontalLayoutWidget_2)
        self.cpu_rate_update.setObjectName("cpu_rate_update")
        self.formLayout_6.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.cpu_rate_update)
        self.label_34 = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.label_34.setObjectName("label_34")
        self.formLayout_6.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_34)
        self.band_width_update = QtWidgets.QLineEdit(self.horizontalLayoutWidget_2)
        self.band_width_update.setObjectName("cpu_band_width")
        self.formLayout_6.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.band_width_update)
        self.pushButton_3 = QtWidgets.QPushButton(self.horizontalLayoutWidget_2)
        self.pushButton_3.setObjectName("pushButton_3")
        self.formLayout_6.setWidget(7, QtWidgets.QFormLayout.FieldRole, self.pushButton_3)
        self.line_3 = QtWidgets.QFrame(self.horizontalLayoutWidget_2)
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.formLayout_6.setWidget(8, QtWidgets.QFormLayout.LabelRole, self.line_3)
        self.platform_create_2 = QtWidgets.QPushButton(self.horizontalLayoutWidget_2)
        self.platform_create_2.setObjectName("platform_create_2")
        # self.platform_create_2.clicked.connect(lambda: self.create_cloud())
        self.formLayout_6.setWidget(9, QtWidgets.QFormLayout.SpanningRole, self.platform_create_2)
        self.update_platform = QtWidgets.QPushButton(self.horizontalLayoutWidget_2)
        self.update_platform.setObjectName("update_platform")
        self.formLayout_6.setWidget(10, QtWidgets.QFormLayout.SpanningRole, self.update_platform)
        self.delete_platform = QtWidgets.QPushButton(self.horizontalLayoutWidget_2)
        self.delete_platform.setObjectName("delete_platform")
        self.formLayout_6.setWidget(11, QtWidgets.QFormLayout.SpanningRole, self.delete_platform)
        self.update_storage = QtWidgets.QLineEdit(self.horizontalLayoutWidget_2)
        self.update_storage.setObjectName("update_storage")
        self.formLayout_6.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.update_storage)
        self.label_28 = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.label_28.setObjectName("label_28")
        self.formLayout_6.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.label_28)
        self.formLayout_6.setWidget(10, QtWidgets.QFormLayout.SpanningRole, self.delete_platform)
        self.update_platform_back = QtWidgets.QCommandLinkButton(self.horizontalLayoutWidget_2)
        self.update_platform_back.setObjectName("update_platform_back")
        self.update_platform_back.clicked.connect(lambda: self.navigate_last_page())
        self.formLayout_6.setWidget(0, QtWidgets.QFormLayout.SpanningRole, self.update_platform_back)
        self.horizontalLayout_5.addLayout(self.formLayout_6)
        self.platforms_table = QtWidgets.QTableView(self.horizontalLayoutWidget_2)
        self.platforms_table.setObjectName("platforms_table")
        self.horizontalLayout_5.addWidget(self.platforms_table)
        self.stackedWidget.addWidget(self.page_5)
        self.page_7 = QtWidgets.QWidget()
        self.page_7.setObjectName("page_7")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.page_7)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(29, 19, 791, 571))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout()
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.update_ticket_back = QtWidgets.QCommandLinkButton(self.horizontalLayoutWidget)
        self.update_ticket_back.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.update_ticket_back.setObjectName("update_ticket_back")
        self.update_ticket_back.clicked.connect(lambda: self.navigate_last_page())
        self.verticalLayout_6.addWidget(self.update_ticket_back)
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.ticket_search = QtWidgets.QLineEdit(self.horizontalLayoutWidget)
        self.ticket_search.setObjectName("ticket_search")
        self.horizontalLayout_10.addWidget(self.ticket_search)
        self.search = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.search.setObjectName("search")
        self.horizontalLayout_10.addWidget(self.search)
        self.verticalLayout_6.addLayout(self.horizontalLayout_10)
        self.ticket_status_select = QtWidgets.QComboBox(self.horizontalLayoutWidget)
        self.ticket_status_select.setObjectName("ticket_status_select")
        self.ticket_status_select.addItem("All")
        self.ticket_status_select.addItem("waiting")
        self.ticket_status_select.addItem("Answered")
        self.ticket_status_select.addItem("Rejected")
        self.ticket_status_select.currentIndexChanged.connect(lambda: self.selectionchangeComboBox())
        self.verticalLayout_6.addWidget(self.ticket_status_select)
        self.label_25 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        self.label_25.setObjectName("label_25")
        self.verticalLayout_6.addWidget(self.label_25)
        self.ticket_show_question = QtWidgets.QTextEdit(self.horizontalLayoutWidget)
        self.ticket_show_question.setObjectName("textEdit")
        self.verticalLayout_6.addWidget(self.ticket_show_question)
        self.label_26 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        self.label_26.setObjectName("label_26")
        self.verticalLayout_6.addWidget(self.label_26)
        self.ticket_show_answer = QtWidgets.QTextEdit(self.horizontalLayoutWidget)
        self.ticket_show_answer.setObjectName("textEdit_2")
        self.verticalLayout_6.addWidget(self.ticket_show_answer)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.radio_answered = QtWidgets.QRadioButton(self.horizontalLayoutWidget)
        self.radio_answered.setObjectName("radioButton_3")
        self.horizontalLayout_6.addWidget(self.radio_answered)
        self.radio_rejected = QtWidgets.QRadioButton(self.horizontalLayoutWidget)
        self.radio_rejected.setObjectName("radioButton_2")
        self.horizontalLayout_6.addWidget(self.radio_rejected)
        self.radio_waiting = QtWidgets.QRadioButton(self.horizontalLayoutWidget)
        self.radio_waiting.setObjectName("radioButton")
        self.horizontalLayout_6.addWidget(self.radio_waiting)
        self.verticalLayout_6.addLayout(self.horizontalLayout_6)
        self.update_ticket = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.update_ticket.setObjectName("update_ticket")
        self.update_ticket.clicked.connect(lambda: self.update_tickett())
        self.verticalLayout_6.addWidget(self.update_ticket)
        self.delete_ticket_btn = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.delete_ticket_btn.setObjectName("delete_ticket")
        self.delete_ticket_btn.clicked.connect(lambda: self.delete_ticket())
        self.verticalLayout_6.addWidget(self.delete_ticket_btn)
        self.horizontalLayout_3.addLayout(self.verticalLayout_6)
        self.ticket_table = QtWidgets.QTableWidget(self.horizontalLayoutWidget)
        self.ticket_table.setObjectName("ticket_table")
        self.ticket_table.setColumnCount(0)
        self.ticket_table.setRowCount(0)
        self.ticket_table.itemSelectionChanged.connect(lambda: self.ticket_selected())
        self.horizontalLayout_3.addWidget(self.ticket_table)
        self.stackedWidget.addWidget(self.page_7)
        self.page_8 = QtWidgets.QWidget()
        self.page_8.setObjectName("page_8")
        self.verticalLayoutWidget_6 = QtWidgets.QWidget(self.page_8)
        self.verticalLayoutWidget_6.setGeometry(QtCore.QRect(10, 10, 821, 591))
        self.verticalLayoutWidget_6.setObjectName("verticalLayoutWidget_6")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_6)
        self.verticalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.add_ticket_back = QtWidgets.QCommandLinkButton(self.verticalLayoutWidget_6)
        self.add_ticket_back.setObjectName("add_ticket_back")
        self.add_ticket_back.clicked.connect(lambda: self.navigate_last_page())
        self.verticalLayout_7.addWidget(self.add_ticket_back)
        self.label_27 = QtWidgets.QLabel(self.verticalLayoutWidget_6)
        self.label_27.setObjectName("label_27")
        self.verticalLayout_7.addWidget(self.label_27)
        self.add_ticket = QtWidgets.QTextEdit(self.verticalLayoutWidget_6)
        self.add_ticket.setObjectName("add_ticket")
        self.verticalLayout_7.addWidget(self.add_ticket)
        self.add_ticket_btn = QtWidgets.QPushButton(self.verticalLayoutWidget_6)
        self.add_ticket_btn.setObjectName("pushButton")
        self.add_ticket_btn.setObjectName("pushButton")
        self.add_ticket_btn.clicked.connect(lambda: self.add_tickets())
        self.verticalLayout_7.addWidget(self.add_ticket_btn)
        self.stackedWidget.addWidget(self.page_8)
        self.page_9 = QtWidgets.QWidget()
        self.page_9.setObjectName("page_9")
        self.verticalLayoutWidget_7 = QtWidgets.QWidget(self.page_9)
        self.verticalLayoutWidget_7.setGeometry(QtCore.QRect(30, 20, 781, 581))
        self.verticalLayoutWidget_7.setObjectName("verticalLayoutWidget_7")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_7)
        self.verticalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.commandLinkButton = QtWidgets.QCommandLinkButton(self.verticalLayoutWidget_7)
        self.commandLinkButton.setObjectName("commandLinkButton")
        self.commandLinkButton.clicked.connect(lambda: self.navigate_last_page())
        self.verticalLayout_8.addWidget(self.commandLinkButton)
        self.snapshot_table = QtWidgets.QTableWidget(self.verticalLayoutWidget_7)
        self.snapshot_table.setObjectName("snapshot_table")
        self.verticalLayout_8.addWidget(self.snapshot_table)
        self.take_snapshot = QtWidgets.QPushButton(self.verticalLayoutWidget_7)
        self.take_snapshot.setObjectName("take_snapshot")
        self.take_snapshot.clicked.connect(lambda: self.add_snapshot_function())
        self.verticalLayout_8.addWidget(self.take_snapshot)
        self.delete_snapshot = QtWidgets.QPushButton(self.verticalLayoutWidget_7)
        self.delete_snapshot.setObjectName("delete_snapshot")
        self.delete_snapshot.clicked.connect(lambda: self.delete_snapshot_table())
        self.verticalLayout_8.addWidget(self.delete_snapshot)
        self.stackedWidget.addWidget(self.page_9)
        self.page_10 = QtWidgets.QWidget()
        self.page_10.setObjectName("page_10")
        self.verticalLayoutWidget_8 = QtWidgets.QWidget(self.page_10)
        self.verticalLayoutWidget_8.setGeometry(QtCore.QRect(20, 10, 801, 591))
        self.verticalLayoutWidget_8.setObjectName("verticalLayoutWidget_8")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_8)
        self.verticalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.back_all_user = QtWidgets.QCommandLinkButton(self.verticalLayoutWidget_8)
        self.back_all_user.setObjectName("back_all_user")
        self.back_all_user.clicked.connect(lambda: self.navigate_last_page())
        self.verticalLayout_9.addWidget(self.back_all_user)
        self.user_table = QtWidgets.QTableWidget(self.verticalLayoutWidget_8)
        self.user_table.setObjectName("user_table")
        self.user_table.setColumnCount(0)
        self.user_table.setRowCount(0)
        # self.user_table.itemSelectionChanged.connect(lambda: self.user_table_select)
        self.verticalLayout_9.addWidget(self.user_table)
        self.user_platform = QtWidgets.QPushButton(self.verticalLayoutWidget_8)
        self.user_platform.setObjectName("user_platform")
        self.user_platform.clicked.connect(lambda: self.admin_user_platforms())
        self.verticalLayout_9.addWidget(self.user_platform)
        self.user_ticket = QtWidgets.QPushButton(self.verticalLayoutWidget_8)
        self.user_ticket.setObjectName("user_ticket")
        self.user_ticket.clicked.connect(lambda: self.admin_user_ticket())
        self.verticalLayout_9.addWidget(self.user_ticket)
        self.update_user = QtWidgets.QPushButton(self.verticalLayoutWidget_8)
        self.update_user.setObjectName("update_user")
        self.update_user.clicked.connect(lambda: self.admin_update_user())
        self.verticalLayout_9.addWidget(self.update_user)
        self.stackedWidget.addWidget(self.page_10)
        self.page_11 = QtWidgets.QWidget()
        self.page_11.setObjectName("page_11")
        self.verticalLayoutWidget_5 = QtWidgets.QWidget(self.page_11)
        self.verticalLayoutWidget_5.setGeometry(QtCore.QRect(10, 20, 811, 581))
        self.verticalLayoutWidget_5.setObjectName("verticalLayoutWidget_5")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_5)
        self.verticalLayout_11.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.horizontalLayout_13 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_13.setObjectName("horizontalLayout_13")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout()
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.formLayout_7 = QtWidgets.QFormLayout()
        self.formLayout_7.setObjectName("formLayout_7")
        self.label_35 = QtWidgets.QLabel(self.verticalLayoutWidget_5)
        self.label_35.setObjectName("label_35")
        self.formLayout_7.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_35)
        self.ram_platform = QtWidgets.QLineEdit(self.verticalLayoutWidget_5)
        self.ram_platform.setObjectName("ram_platform")
        self.formLayout_7.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.ram_platform)
        self.core_platform = QtWidgets.QLineEdit(self.verticalLayoutWidget_5)
        self.core_platform.setObjectName("core_platform")
        self.formLayout_7.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.core_platform)
        self.rate_platform = QtWidgets.QLineEdit(self.verticalLayoutWidget_5)
        self.rate_platform.setObjectName("rate_platform")
        self.formLayout_7.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.rate_platform)
        self.storage_platform = QtWidgets.QLineEdit(self.verticalLayoutWidget_5)
        self.storage_platform.setObjectName("storage_platform")
        self.formLayout_7.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.storage_platform)
        self.bandwidth_platform = QtWidgets.QLineEdit(self.verticalLayoutWidget_5)
        self.bandwidth_platform.setObjectName("bandwidth_platform")
        self.formLayout_7.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.bandwidth_platform)
        self.label_36 = QtWidgets.QLabel(self.verticalLayoutWidget_5)
        self.label_36.setObjectName("label_36")
        self.formLayout_7.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_36)
        self.label_37 = QtWidgets.QLabel(self.verticalLayoutWidget_5)
        self.label_37.setObjectName("label_37")
        self.formLayout_7.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_37)
        self.label_38 = QtWidgets.QLabel(self.verticalLayoutWidget_5)
        self.label_38.setObjectName("label_38")
        self.formLayout_7.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_38)
        self.label_39 = QtWidgets.QLabel(self.verticalLayoutWidget_5)
        self.label_39.setObjectName("label_39")
        self.formLayout_7.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.label_39)
        self.update_platform_2 = QtWidgets.QPushButton(self.verticalLayoutWidget_5)
        self.update_platform_2.setObjectName("update_platform_2")
        self.update_platform_2.clicked.connect(lambda: self.update_platform_method())
        self.formLayout_7.setWidget(7, QtWidgets.QFormLayout.SpanningRole, self.update_platform_2)
        spacerItem5 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.formLayout_7.setItem(0, QtWidgets.QFormLayout.LabelRole, spacerItem5)
        spacerItem6 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.formLayout_7.setItem(0, QtWidgets.QFormLayout.FieldRole, spacerItem6)
        spacerItem7 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.formLayout_7.setItem(1, QtWidgets.QFormLayout.LabelRole, spacerItem7)
        self.label_40 = QtWidgets.QLabel(self.verticalLayoutWidget_5)
        self.label_40.setObjectName("label_40")
        self.formLayout_7.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.label_40)
        spacerItem8 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.formLayout_7.setItem(8, QtWidgets.QFormLayout.LabelRole, spacerItem8)
        self.label_41 = QtWidgets.QLabel(self.verticalLayoutWidget_5)
        self.label_41.setObjectName("label_41")
        self.formLayout_7.setWidget(9, QtWidgets.QFormLayout.LabelRole, self.label_41)
        self.os_name = QtWidgets.QLineEdit(self.verticalLayoutWidget_5)
        self.os_name.setObjectName("os_name")
        self.formLayout_7.setWidget(9, QtWidgets.QFormLayout.FieldRole, self.os_name)
        self.add_os = QtWidgets.QPushButton(self.verticalLayoutWidget_5)
        self.add_os.setObjectName("add_os")
        self.add_os.clicked.connect(lambda: self.add_to_os())
        self.formLayout_7.setWidget(10, QtWidgets.QFormLayout.SpanningRole, self.add_os)
        self.commandLinkButton_2 = QtWidgets.QCommandLinkButton(self.verticalLayoutWidget_5)
        self.commandLinkButton_2.setObjectName("commandLinkButton_2")
        self.commandLinkButton_2.clicked.connect(lambda: self.navigate_last_page())
        self.formLayout_7.setWidget(0, QtWidgets.QFormLayout.SpanningRole, self.commandLinkButton_2)
        self.horizontalLayout_13.addLayout(self.verticalLayout_12)
        self.verticalLayout_12.addLayout(self.formLayout_7)
        self.formLayout_7.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.label_40)
        self.verticalLayout_12.addLayout(self.formLayout_7)
        self.horizontalLayout_13.addLayout(self.verticalLayout_12)
        self.platform_table = QtWidgets.QTableWidget(self.verticalLayoutWidget_5)
        self.platform_table.setObjectName("platform_table")
        self.platform_table.setColumnCount(0)
        self.platform_table.setRowCount(0)
        self.platform_table.itemSelectionChanged.connect(lambda: self.plaform_select())
        self.horizontalLayout_13.addWidget(self.platform_table)
        self.os_table = QtWidgets.QTableWidget(self.verticalLayoutWidget_5)
        self.os_table.setObjectName("os_table")
        self.os_table.setColumnCount(0)
        self.os_table.setRowCount(0)
        self.horizontalLayout_13.addWidget(self.os_table)
        self.verticalLayout_11.addLayout(self.horizontalLayout_13)
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.unselected = QtWidgets.QRadioButton(self.verticalLayoutWidget_5)

        self.unselected.setObjectName("unselected")
        self.unselected.setChecked(True)
        self.unselected.clicked.connect(lambda: self.selected_os_radio_btn())
        self.horizontalLayout_12.addWidget(self.unselected)
        self.selected = QtWidgets.QRadioButton(self.verticalLayoutWidget_5)
        self.selected.setObjectName("selected")
        self.selected.clicked.connect(lambda: self.selected_os_radio_btn())
        self.horizontalLayout_12.addWidget(self.selected)
        self.add_or_remove = QtWidgets.QPushButton(self.verticalLayoutWidget_5)
        self.add_or_remove.setObjectName("add_or_remove")
        self.add_or_remove.clicked.connect(lambda: self.add_os_to_platform())
        self.horizontalLayout_12.addWidget(self.add_or_remove)
        self.verticalLayout_11.addLayout(self.horizontalLayout_12)
        self.stackedWidget.addWidget(self.page_11)
        self.page_12 = QtWidgets.QWidget()
        self.page_12.setObjectName("page_12")
        self.verticalLayoutWidget_10 = QtWidgets.QWidget(self.page_12)
        self.verticalLayoutWidget_10.setGeometry(QtCore.QRect(20, 20, 801, 581))
        self.verticalLayoutWidget_10.setObjectName("verticalLayoutWidget_10")
        self.verticalLayout_13 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_10)
        self.verticalLayout_13.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        self.commandLinkButton_3 = QtWidgets.QCommandLinkButton(self.verticalLayoutWidget_10)
        self.commandLinkButton_3.setObjectName("commandLinkButton_3")
        self.commandLinkButton_3.clicked.connect(lambda: self.navigate_last_page())
        self.verticalLayout_13.addWidget(self.commandLinkButton_3)
        self.tableWidget = QtWidgets.QTableWidget(self.verticalLayoutWidget_10)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(0)
        self.tableWidget.setRowCount(0)
        self.verticalLayout_13.addWidget(self.tableWidget)
        self.horizontalLayout_14 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_14.setObjectName("horizontalLayout_14")
        self.delete_cloud = QtWidgets.QPushButton(self.verticalLayoutWidget_10)
        self.delete_cloud.setObjectName("delete_cloud")
        self.delete_cloud.clicked.connect(lambda: self.delete_cloud_function())
        self.horizontalLayout_14.addWidget(self.delete_cloud)
        self.snapshot = QtWidgets.QPushButton(self.verticalLayoutWidget_10)
        self.snapshot.setObjectName("snapshot")
        self.snapshot.clicked.connect(lambda: self.navigate_snapshot_screen())
        self.horizontalLayout_14.addWidget(self.snapshot)
        self.cloud_update = QtWidgets.QPushButton(self.verticalLayoutWidget_10)
        self.cloud_update.setObjectName("cloud_update")
        self.cloud_update.clicked.connect(lambda: self.navigate_select_os_platform(True))
        self.horizontalLayout_14.addWidget(self.cloud_update)
        self.cloud_create = QtWidgets.QPushButton(self.verticalLayoutWidget_10)
        self.cloud_create.setObjectName("cloud_create")
        self.cloud_create.clicked.connect(lambda: self.navigate_select_os_platform(False))
        self.horizontalLayout_14.addWidget(self.cloud_create)
        self.verticalLayout_13.addLayout(self.horizontalLayout_14)
        self.stackedWidget.addWidget(self.page_12)
        self.page_13 = QtWidgets.QWidget()
        self.page_13.setObjectName("page_13")
        self.verticalLayoutWidget_11 = QtWidgets.QWidget(self.page_13)
        self.verticalLayoutWidget_11.setGeometry(QtCore.QRect(20, 30, 801, 571))
        self.verticalLayoutWidget_11.setObjectName("verticalLayoutWidget_11")
        self.verticalLayout_14 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_11)
        self.verticalLayout_14.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_14.setObjectName("verticalLayout_14")
        self.commandLinkButton_4 = QtWidgets.QCommandLinkButton(self.verticalLayoutWidget_11)
        self.commandLinkButton_4.setObjectName("commandLinkButton_4")
        self.commandLinkButton_4.clicked.connect(lambda: self.navigate_last_page())
        self.verticalLayout_14.addWidget(self.commandLinkButton_4)
        self.tableWidget_2 = QtWidgets.QTableWidget(self.verticalLayoutWidget_11)
        self.tableWidget_2.setObjectName("tableWidget_2")
        self.tableWidget_2.setColumnCount(0)
        self.tableWidget_2.setRowCount(0)
        self.verticalLayout_14.addWidget(self.tableWidget_2)
        self.horizontalLayout_15 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_15.setObjectName("horizontalLayout_15")
        self.pushButton = QtWidgets.QPushButton(self.verticalLayoutWidget_11)
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(lambda: self.navigate_new_cloud())
        self.horizontalLayout_15.addWidget(self.pushButton)
        self.verticalLayout_14.addLayout(self.horizontalLayout_15)
        self.stackedWidget.addWidget(self.page_13)
        self.page_14 = QtWidgets.QWidget()
        self.page_14.setObjectName("page_14")
        self.formLayoutWidget_2 = QtWidgets.QWidget(self.page_14)
        self.formLayoutWidget_2.setGeometry(QtCore.QRect(20, 20, 801, 581))
        self.formLayoutWidget_2.setObjectName("formLayoutWidget_2")
        self.formLayout_8 = QtWidgets.QFormLayout(self.formLayoutWidget_2)
        self.formLayout_8.setContentsMargins(0, 0, 0, 0)
        self.formLayout_8.setObjectName("formLayout_8")
        self.commandLinkButton_5 = QtWidgets.QCommandLinkButton(self.formLayoutWidget_2)
        self.commandLinkButton_5.setObjectName("commandLinkButton_5")
        self.commandLinkButton_5.clicked.connect(lambda: self.navigate_last_page())
        self.formLayout_8.setWidget(0, QtWidgets.QFormLayout.SpanningRole, self.commandLinkButton_5)
        spacerItem9 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.formLayout_8.setItem(1, QtWidgets.QFormLayout.FieldRole, spacerItem9)
        self.label_42 = QtWidgets.QLabel(self.formLayoutWidget_2)
        self.label_42.setObjectName("label_42")
        self.formLayout_8.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_42)
        self.cloud_ram = QtWidgets.QLineEdit(self.formLayoutWidget_2)
        self.cloud_ram.setObjectName("cloud_ram")
        self.formLayout_8.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.cloud_ram)
        self.label_43 = QtWidgets.QLabel(self.formLayoutWidget_2)
        self.label_43.setObjectName("label_43")
        self.formLayout_8.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_43)
        self.cloud_core = QtWidgets.QLineEdit(self.formLayoutWidget_2)
        self.cloud_core.setObjectName("cloud_core")
        self.formLayout_8.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.cloud_core)
        self.label_44 = QtWidgets.QLabel(self.formLayoutWidget_2)
        self.label_44.setObjectName("label_44")
        self.formLayout_8.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_44)
        self.cloud_rate = QtWidgets.QLineEdit(self.formLayoutWidget_2)
        self.cloud_rate.setObjectName("cloud_rate")
        self.formLayout_8.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.cloud_rate)
        self.label_45 = QtWidgets.QLabel(self.formLayoutWidget_2)
        self.label_45.setObjectName("label_45")
        self.formLayout_8.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_45)
        self.cloud_storage = QtWidgets.QLineEdit(self.formLayoutWidget_2)
        self.cloud_storage.setObjectName("cloud_storage")
        self.formLayout_8.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.cloud_storage)
        self.label_46 = QtWidgets.QLabel(self.formLayoutWidget_2)
        self.label_46.setObjectName("label_46")
        self.formLayout_8.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.label_46)
        self.cloud_bandwidth = QtWidgets.QLineEdit(self.formLayoutWidget_2)
        self.cloud_bandwidth.setObjectName("cloud_bandwidth")
        self.formLayout_8.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.cloud_bandwidth)
        self.label_47 = QtWidgets.QLabel(self.formLayoutWidget_2)
        self.label_47.setObjectName("label_47")
        self.formLayout_8.setWidget(7, QtWidgets.QFormLayout.LabelRole, self.label_47)
        self.cloud_create_2 = QtWidgets.QPushButton(self.formLayoutWidget_2)
        self.cloud_create_2.setObjectName("cloud_create_2")
        self.cloud_create_2.clicked.connect(lambda: self.create_new_cloud())
        self.formLayout_8.setWidget(8, QtWidgets.QFormLayout.SpanningRole, self.cloud_create_2)
        self.cloud_day = QtWidgets.QLineEdit(self.formLayoutWidget_2)
        self.cloud_day.setObjectName("cloud_day")
        self.formLayout_8.setWidget(7, QtWidgets.QFormLayout.FieldRole, self.cloud_day)
        self.stackedWidget.addWidget(self.page_14)

        self.retranslateUi(Form)
        self.stackedWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.label.setText(_translate("Form", "passport id"))
        self.label_2.setText(_translate("Form", "password"))
        self.forgot_btn.setText(_translate("Form", "forgot password"))
        self.is_admin.setText(_translate("Form", "is admin"))
        self.login_btn.setText(_translate("Form", "Login"))
        self.register_btn.setText(_translate("Form", "Register"))
        self.label_6.setText(_translate("Form", "SignUp"))
        self.label_3.setText(_translate("Form", "passportId"))
        self.label_4.setText(_translate("Form", "name"))
        self.label_5.setText(_translate("Form", "family"))
        self.label_7.setText(_translate("Form", "email"))
        self.label_8.setText(_translate("Form", "Account Balance"))
        self.label_24.setText(_translate("Form", "password"))
        self.register_is_admin.setText(_translate("Form", "is Admin"))
        self.registerValid.setText(_translate("Form", "Data is not valid"))
        self.signup_btn.setText(_translate("Form", "signUp"))
        self.signup_btn.clicked.connect(lambda: self.register())
        self.create_platform_back.setText(_translate("Form", "back"))
        self.label_9.setText(_translate("Form", "platform"))
        self.label_10.setText(_translate("Form", "Os"))
        # self.windows.setText(_translate("Form", "windows"))
        # self.linux.setText(_translate("Form", "Linux"))
        # self.mac.setText(_translate("Form", "MacOs"))
        self.label_11.setText(_translate("Form", "Ram"))
        self.label_12.setText(_translate("Form", "/MB "))
        self.label_13.setText(_translate("Form", "cpuCore  "))
        self.label_14.setText(_translate("Form", "CpuRate"))
        self.label_15.setText(_translate("Form", "BandWidth"))
        self.platform_create.setText(_translate("Form", "Create"))
        self.update_platform_screen.setText(_translate("Form", "update platform"))
        self.all_platform_page.setText(_translate("Form", "show All platform"))
        self.create_platform_page.setText(_translate("Form", "create newPlatform"))
        self.add_tikets_page.setText(_translate("Form", "add tikets"))
        self.add_tikets_page.clicked.connect(lambda: self.navigate_add_ticket())
        self.settings_page.setText(_translate("Form", "settings"))
        self.all_users_btn.setText(_translate("Form", "All users"))
        self.settings_page.clicked.connect(lambda: self.navigate_settings(is_admin=self.user.is_admin))
        self.show_ticket_page.setText(_translate("Form", "show all tickets"))
        self.sign_out_btn.setText(_translate("Form", "sign out"))
        self.account_settings_back.setText(_translate("Form", "Back"))
        self.label_22.setText(_translate("Form", "Account Settings"))
        self.label_16.setText(_translate("Form", "Edite Account"))
        self.label_17.setText(_translate("Form", "passportId"))
        self.label_18.setText(_translate("Form", "name"))
        self.label_19.setText(_translate("Form", "family"))
        self.label_20.setText(_translate("Form", "email"))
        self.label_21.setText(_translate("Form", "Account Balance"))
        self.label_23.setText(_translate("Form", "password"))
        self.signUp_2.setText(_translate("Form", "Update"))
        self.signUp_2.clicked.connect(lambda: self.update_user_function(self.user.is_admin))
        self.settings_delete.setText(_translate("Form", "Delete Account"))
        self.label_29.setText(_translate("Form", "Os"))
        self.windows_3.setText(_translate("Form", "windows"))
        self.linux_3.setText(_translate("Form", "Linux"))
        self.mac_3.setText(_translate("Form", "MacOs"))
        self.label_30.setText(_translate("Form", "Ram"))
        self.label_31.setText(_translate("Form", "/MB "))
        self.label_32.setText(_translate("Form", "cpuCore  "))
        self.label_33.setText(_translate("Form", "CpuRate"))
        self.label_34.setText(_translate("Form", "BandWidth"))
        self.pushButton_3.setText(_translate("Form", "show all snapshot of selected platform"))
        self.platform_create_2.setText(_translate("Form", "Create"))
        self.storage.setText(_translate("Form", "storage"))
        self.update_platform.setText(_translate("Form", "update"))
        self.delete_platform.setText(_translate("Form", "Delete platform"))
        self.label_28.setText(_translate("Form", "storage"))
        self.update_platform_back.setText(_translate("Form", "Back"))
        self.update_ticket_back.setText(_translate("Form", "back"))
        self.search.setText(_translate("Form", "search"))
        self.label_25.setText(_translate("Form", "question"))
        self.label_26.setText(_translate("Form", "Answer"))
        self.radio_answered.setText(_translate("Form", "answered"))
        self.radio_rejected.setText(_translate("Form", "Rejected"))
        self.radio_waiting.setText(_translate("Form", "waiting"))
        self.update_ticket.setText(_translate("Form", "update"))
        self.delete_ticket_btn.setText(_translate("Form", "Delete Ticket"))
        self.add_ticket_back.setText(_translate("Form", "Back"))
        self.label_27.setText(_translate("Form", "ADD TICKET"))
        self.add_ticket_btn.setText(_translate("Form", "Add Ticket"))
        self.commandLinkButton.setText(_translate("Form", "back"))
        self.take_snapshot.setText(_translate("Form", "take new snapShot"))
        self.delete_snapshot.setText(_translate("Form", "delete selected snapshot"))
        self.back_all_user.setText(_translate("Form", "back"))
        self.user_platform.setText(_translate("Form", "user platform"))
        self.user_ticket.setText(_translate("Form", "user ticket"))
        self.update_user.setText(_translate("Form", "update user"))
        self.label_35.setText(_translate("Form", "ram"))
        self.label_36.setText(_translate("Form", "cpu core"))
        self.label_37.setText(_translate("Form", "cpu rate"))
        self.label_38.setText(_translate("Form", "storage"))
        self.label_39.setText(_translate("Form", "bandwidth"))
        self.update_platform_2.setText(_translate("Form", "update"))
        self.label_40.setText(_translate("Form", "Update platform"))
        self.unselected.setText(_translate("Form", "unselected"))
        self.label_41.setText(_translate("Form", "os name"))
        self.add_os.setText(_translate("Form", "add os"))
        self.selected.setText(_translate("Form", "selected"))
        self.add_or_remove.setText(_translate("Form", "add"))
        self.commandLinkButton_3.setText(_translate("Form", "Back"))
        self.delete_cloud.setText(_translate("Form", "Delete"))
        self.snapshot.setText(_translate("Form", "snapshot"))
        self.cloud_update.setText(_translate("Form", "update"))
        self.cloud_create.setText(_translate("Form", "create"))
        self.commandLinkButton_4.setText(_translate("Form", "Back"))
        self.pushButton.setText(_translate("Form", "select"))
        self.label_42.setText(_translate("Form", "ram"))
        self.label_43.setText(_translate("Form", "cpu core"))
        self.label_44.setText(_translate("Form", "cpu rate"))
        self.label_45.setText(_translate("Form", "storage size"))
        self.label_46.setText(_translate("Form", "bandwidth"))
        self.cloud_create_2.setText(_translate("Form", "create cloud"))
        self.commandLinkButton_5.setText(_translate("Form", "Back"))

    def navigate_register(self):
        self.stackedWidget.setCurrentIndex(1)

    def navigate_settings(self, is_admin: bool):
        if is_admin:
            self.label_21.setText("Admin ID")
            self.register_balance.setEnabled(False)
        else:
            self.label_21.setText("Account Balance")
            self.register_balance.setEnabled(True)

        self.settings_name.setText(self.user.first_name)
        self.settings_family.setText(self.user.last_name)
        self.settings_email.setText(self.user.email)
        self.settings_balance.setText(str(self.user.account_balance))
        self.settings_passportid.setText(str(self.user.passport_id))
        self.settings_10.setText(self.user.password)
        stack.append(self.stackedWidget.currentIndex())
        self.stackedWidget.setCurrentIndex(4)

    def navigate_new_platform(self):
        stack.append(self.stackedWidget.currentIndex())
        self.stackedWidget.setCurrentIndex(2)

    def password_mail(self):
        # record = self.data_base.check_user(passport_id=self.username.text())
        # server = smtplib.SMTP('smtp.gmail.com', 587)
        # server.starttls()
        # server.login("kmmm5793@gmail.com", "haahhaha")
        # msg = "\nYour password is : %s! \n" % (record[0][4])
        # server.sendmail("zmmmken@gmail.com", "kmmm5793@gmail.com", msg)
        # server.quit()
        print("password sent")

    def navigate_last_page(self):
        self.passportid = self.user.passport_id
        self.stackedWidget.setCurrentIndex(stack.pop())

    def navigate_tickets(self):
        self.get_all_tickets()
        stack.append(self.stackedWidget.currentIndex())
        self.stackedWidget.setCurrentIndex(6)

    def navigate_all_users(self):
        self.get_all_user()
        stack.append(self.stackedWidget.currentIndex())
        self.stackedWidget.setCurrentIndex(9)

    def navigate_update_cloud(self, is_admin: bool, passport_id):
        # todo database
        stack.append(self.stackedWidget.currentIndex())
        self.stackedWidget.setCurrentIndex(11)
        # todo
        self.select_cloud(passport_id=self.passportid)
        self.update_cloud_table()

    def navigate_add_ticket(self):
        stack.append(self.stackedWidget.currentIndex())
        self.stackedWidget.setCurrentIndex(7)

    def navigate_update_platform(self):
        self.get_platform()
        stack.append(self.stackedWidget.currentIndex())
        self.stackedWidget.setCurrentIndex(10)

    def navigate_select_os_platform(self, isUpdate: bool):
        if isUpdate:
            if self.tableWidget.currentRow()>0:
                self.is_update = isUpdate
                stack.append(self.stackedWidget.currentIndex())
                self.stackedWidget.setCurrentIndex(12)
        else:
            self.is_update = isUpdate
            stack.append(self.stackedWidget.currentIndex())
            self.stackedWidget.setCurrentIndex(12)

        record = self.data_base.all_platform_os()
        self.all_platforms = record
        self.tableWidget_2.setRowCount(len(record)+1)
        self.tableWidget_2.setColumnCount(8)
        # os.os_id,os.os_name,platform.platform_pk,storage_size,ram,cpu_core,cpu_rate,bandwidth
        self.tableWidget_2.setItem(0, 0, QtWidgets.QTableWidgetItem('os id'))
        self.tableWidget_2.setItem(0, 1, QtWidgets.QTableWidgetItem('os name'))
        self.tableWidget_2.setItem(0, 2, QtWidgets.QTableWidgetItem('platform id'))
        self.tableWidget_2.setItem(0, 3, QtWidgets.QTableWidgetItem('storage size'))
        self.tableWidget_2.setItem(0, 4, QtWidgets.QTableWidgetItem('ram'))
        self.tableWidget_2.setItem(0, 5, QtWidgets.QTableWidgetItem('cpu core'))
        self.tableWidget_2.setItem(0, 6, QtWidgets.QTableWidgetItem('cpu rate'))
        self.tableWidget_2.setItem(0, 7, QtWidgets.QTableWidgetItem('bandwidth'))
        for i in range(len(record)):
            for j in range(8):
                self.tableWidget_2.setItem(i+1, j, QtWidgets.QTableWidgetItem(str(record[i][j])))

    def navigate_new_cloud(self):
        if self.tableWidget_2.currentRow()>0:
            stack.append(self.stackedWidget.currentIndex())
            self.stackedWidget.setCurrentIndex(13)

    def navigate_snapshot_screen(self):
        if self.tableWidget.currentRow() > 0 :
            self.all_snapshot()
            stack.append(self.stackedWidget.currentIndex())
            self.stackedWidget.setCurrentIndex(8)

    def create_new_cloud(self):
        index = self.tableWidget_2.currentRow() -1
        os_id = int(self.all_platforms[index][0])
        platform_id = int(self.all_platforms[index][2])
        core = int(self.cloud_core.text())
        rate = int(self.cloud_rate.text())
        ram = int(self.cloud_ram.text())
        storage = int(self.cloud_storage.text())
        bandwidth = int(self.cloud_bandwidth.text())
        day = int(self.cloud_day.text())
        if not self.is_update:
            passprt_id = int(self.passportid)
            register = self.data_base.cloud_insert_table(platform_pk=platform_id, storage_size=storage, ram=ram, cpu_core=core, cpu_rate=rate, bandwidth=bandwidth, os_id=os_id, passport_id=passprt_id,day_number=day)
            if register:
                stack.pop()
                stack.pop()
                self.navigate_update_cloud(is_admin=self.user.is_admin, passport_id=passprt_id)

    def delete_cloud_function(self):
        if self.tableWidget.currentRow()>0:
            self.data_base.cloud_delete(self.clouds[self.tableWidget.currentRow()-1][0])
            self.select_cloud(passport_id=self.user.passport_id)
            self.update_cloud_table()

    def sign_out(self):
        stack.clear()
        self.stackedWidget.setCurrentIndex(0)

    def checkLogin(self):
        username = self.username.text()
        password1 = self.password.text()
        admin = self.is_admin.checkState() == QtCore.Qt.Checked
        record = list
        if admin == False:
            record = self.data_base.check_user(passport_id=username)
        else:
            # todo
            record = self.data_base.admin_get_table(passport_id=username)
            print("admin")

        if len(record) > 0:
            self.create_user(result=record, is_admin=admin)
            if self.user.password == password1:
                self.passportid = self.user.passport_id
                self.stackedWidget.setCurrentIndex(3)

    def delete_user(self):
        delete = self.data_base.user_delete(self.passportid)
        if delete:
            stack.clear()
            self.stackedWidget.setCurrentIndex(0)

    def update_user_function(self, is_admin: bool):
        name = self.settings_name.text()
        family = self.settings_family.text()
        account = self.settings_balance.text()
        passport_id = self.settings_passportid.text()
        email = self.settings_email.text()
        password = self.user.password

        if is_admin==False or self.passportid!=self.user.passport_id:
            self.data_base.update_user(first_name=name, last_name=family, passport_id=self.passportid, email=email,
                                       password=password, account_balance=account, is_admin=False)
            record = self.data_base.check_user(passport_id=self.passportid)
        if is_admin and self.passportid ==self.user.passport_id:
            self.data_base.update_user(first_name=name, last_name=family, passport_id=self.passportid, email=email,
                                       password=password, account_balance=account, is_admin=True)
            record = self.data_base.admin_get_table(passport_id=self.passportid)
            self.create_user(record, self.user.is_admin)

        self.navigate_last_page()

    def register(self):
        name = self.register_name.text()
        family_name = self.register_family.text()
        email = self.register_email.text()
        passport_id = int(self.register_passportid.text())

        self.is_admin = self.register_is_admin.checkState() == QtCore.Qt.Checked
        password = self.register_password.text()
        record = []
        if self.is_admin == False:
            account = int(self.register_balance.text())
            self.data_base.user_insert_table(first_name=name, last_name=family_name, passport_id=passport_id,
                                             email=email, password=password, account_balance=account)
            record = self.data_base.check_user(passport_id=passport_id)
            if len(record) > 0:
                self.create_user(record, is_admin=self.is_admin)
                self.passportid = passport_id
                self.stackedWidget.setCurrentIndex(3)
        else:
            self.data_base.admin_insert_table(first_name=name, last_name=family_name, email=email,
                                              passport_id=passport_id, password=password)
            self.passportid = passport_id
            self.stackedWidget.setCurrentIndex(3)

    def register_admin_select(self):
        if self.register_is_admin.isChecked():
            self.register_balance.setEnabled(False)
        else:
            self.register_balance.setEnabled(True)

    def create_user(self, result: list, is_admin: bool):
        if not is_admin:
            password = str(result[0][4]).replace(' ', '')
            first_name = str(result[0][0]).replace(' ', '')
            email = str(result[0][3]).replace(' ', '')
            join_date = str(result[0][5]).replace(' ', '')
            passport_id = int(result[0][2])
            account_balance = int(result[0][6])
            last_name = str(result[0][1]).replace(' ', '')
            self.user = User(passport_id=passport_id, first_name=first_name, last_name=last_name, email=email,
                             password=password, join_date=join_date, is_admin=is_admin, account_balance=account_balance)
        else:
            password = str(result[0][5]).replace(' ', '')
            first_name = str(result[0][1]).replace(' ', '')
            email = str(result[0][4]).replace(' ', '')
            passport_id = int(result[0][3])
            last_name = str(result[0][2]).replace(' ', '')
            admin_id = str(result[0][0]).replace(' ', '')
            self.user = User(passport_id=passport_id, first_name=first_name, last_name=last_name, email=email,
                             password=password, join_date="join_date", is_admin=is_admin, account_balance=admin_id)

        # if self.user.is_admin == False:
        #     self.ticket_show_answer.setEnabled(False)
        #     self.ticket_show_question.setEnabled(False)
        #     self.update_ticket.setEnabled(False)
        #     self.radio_answered.setEnabled(False)
        #     self.radio_rejected.setEnabled(False)
        #     self.radio_waiting.setEnabled(False)
        # else:
        #     self.ticket_show_answer.setEnabled(True)
        #     self.ticket_show_question.setEnabled(True)
        #     self.update_ticket.setEnabled(True)
        #     self.radio_answered.setEnabled(True)
        #     self.radio_rejected.setEnabled(True)
        #     self.radio_waiting.setEnabled(True)

    def delete_ticket(self):
        self.data_base.ticket_delete(self.tickets[self.selected_ticket][0])
        self.get_all_tickets()

    def get_all_tickets(self):

        if self.is_admin and self.passportid == self.user.passport_id:
            record = self.data_base.ticket_get_table(self.passportid, True)
        else:
            record = self.data_base.ticket_get_table(self.passportid, False)
        self.tickets = record
        self.ticket_table.setColumnCount(6)
        self.ticket_table.setRowCount(len(record))
        for i in range(len(record)):
            for j in range(len(record[i])):
                self.ticket_table.setItem(i, j, QtWidgets.QTableWidgetItem(str(record[i][len(record[i]) - j - 1])))
        # self.ticket_table.

    def get_status_ticket(self,status):
        if self.is_admin and self.passportid==self.user.passport_id:
            record = self.data_base.status_ticket_get_table(self.passportid, True,status)
        else:
            record = self.data_base.status_ticket_get_table(self.passportid, False,status)
        self.tickets = record
        self.ticket_table.setColumnCount(6)
        self.ticket_table.setRowCount(len(record))
        for i in range(len(record)):
            for j in range(len(record[i])):
                self.ticket_table.setItem(i, j, QtWidgets.QTableWidgetItem(str(record[i][len(record[i]) - j - 1])))

    def ticket_selected(self):
        print(self.ticket_table.currentRow())
        self.selected_ticket = self.ticket_table.currentRow()
        self.ticket_show_question.setText(self.tickets[self.ticket_table.currentRow()][4])
        self.ticket_show_answer.setText(self.tickets[self.ticket_table.currentRow()][3])
        if self.tickets[self.selected_ticket][5] == 0:
            self.radio_waiting.setChecked(True)
        elif self.tickets[self.selected_ticket][5] == 1:
            self.radio_answered.setChecked(True)
        elif self.tickets[self.selected_ticket][5] == 2:
            self.radio_rejected.setChecked(True)

    def plaform_select(self,):
        index = self.platform_table.currentRow()
        platform_id = self.platforms[index].platform_pk
        plat = self.platforms[index]
        self.ram_platform.setText(str(plat.ram))
        self.core_platform.setText(str(plat.cpu_core))
        self.rate_platform.setText(str(plat.cpu_rate))
        self.storage_platform.setText(str(plat.storage))
        self.bandwidth_platform.setText(str(plat.bandwidth))
        if self.unselected.isChecked():
            record = self.data_base.unselected_platform_os(platform_id)
            self.update_os_table(record)

        if self.selected.isChecked():
            record = self.data_base.selected_platform_os(platform_id)
            self.update_os_table(record)

    def update_os_table(self,record):
        self.os_list.clear()
        self.os_table.setColumnCount(2)
        self.os_table.setRowCount(len(record))
        for i in record:
            operating_system = OperatingSystem(name=i[0], os_id=i[1])
            self.os_list.append(operating_system)
        for i in range(len(self.os_list)):
            self.os_table.setItem(i, 0, QtWidgets.QTableWidgetItem(self.os_list[i].name))
            self.os_table.setItem(i, 1, QtWidgets.QTableWidgetItem(str(self.os_list[i].os_id)))

    def add_tickets(self):
        self.add_ticket.toPlainText()
        result = self.data_base.ticket_insert_table(self.user.passport_id, self.add_ticket.toPlainText())
        if result == True:
            self.navigate_last_page()
            self.add_ticket.clear()

    def update_tickett(self):
        ticket = self.tickets[self.ticket_table.currentRow()]

        staus = 0

        if self.radio_rejected.isChecked():
            staus = 2
        elif self.radio_answered.isChecked():
            staus = 1

        self.data_base.update_ticket(ticket[0], ticket[1], self.ticket_show_answer.toPlainText(),
                                     self.ticket_show_question.toPlainText(), status=staus)
        self.selectionchangeComboBox()

    def get_all_user(self):
        record = self.data_base.get_all_user()
        self.all_user = record
        self.user_table.setColumnCount(7)
        self.user_table.setRowCount(len(record[0]))
        self.user_table.setItem(0, 0, QtWidgets.QTableWidgetItem("first name"))
        self.user_table.setItem(0, 1, QtWidgets.QTableWidgetItem("last name"))
        self.user_table.setItem(0, 2, QtWidgets.QTableWidgetItem("passport id"))
        self.user_table.setItem(0, 3, QtWidgets.QTableWidgetItem("email"))
        self.user_table.setItem(0, 4, QtWidgets.QTableWidgetItem("password"))
        self.user_table.setItem(0, 5, QtWidgets.QTableWidgetItem("join date"))
        self.user_table.setItem(0, 6, QtWidgets.QTableWidgetItem("account balance"))
        for i in range(len(record)):
            for j in range(len(record[i])):
               self.user_table.setItem(i+1, j, QtWidgets.QTableWidgetItem(str(record[i][j])))

    def get_os(self):
        record = self.data_base.get_os()
        self.os_list = list()
        for i in record:
            operating_system = OperatingSystem(name=i[1], os_id=i[0])
            self.os_list.append(operating_system)

    def add_to_os(self):
        self.data_base.os_insert_table(self.os_name.text())
        self.selected_os_radio_btn()

    def create_platform(self):
        ram = self.ram.text()
        bandWidth = self.band_width.text()
        core = self.cpu_core.text()
        rate = self.cpu_rate.text()
        storage = self.storage_2.text()
        status = 0
        self.data_base.platform_insert_table(storage_size=storage, ram=ram, cpu_core=core, cpu_rate=rate,
                                             bandwidth=bandWidth)
        self.navigate_last_page()

    def select_cloud(self, passport_id):
        if self.user.is_admin and self.passportid == self.user.passport_id:
            self.clouds=[]
            self.clouds = self.data_base.select_all_cloud()
        else:
            self.clouds=[]
            self.clouds = self.data_base.select_cloud(passport_id)

    def update_cloud_table(self):
        self.tableWidget.setColumnCount(14)
        self.tableWidget.setRowCount(len(self.clouds)+1)
        self.tableWidget.setItem(0,0, QtWidgets.QTableWidgetItem("cloud id"))
        self.tableWidget.setItem(0,1, QtWidgets.QTableWidgetItem("day number"))
        self.tableWidget.setItem(0,2, QtWidgets.QTableWidgetItem("daily price"))
        self.tableWidget.setItem(0,3, QtWidgets.QTableWidgetItem("storage size"))
        self.tableWidget.setItem(0,4, QtWidgets.QTableWidgetItem("ram"))
        self.tableWidget.setItem(0,5, QtWidgets.QTableWidgetItem("cpu core"))
        self.tableWidget.setItem(0,6, QtWidgets.QTableWidgetItem("cpu cpu rate"))
        self.tableWidget.setItem(0,7, QtWidgets.QTableWidgetItem("band width"))
        self.tableWidget.setItem(0,8, QtWidgets.QTableWidgetItem("create date"))
        self.tableWidget.setItem(0,9, QtWidgets.QTableWidgetItem("ssh-hash"))
        self.tableWidget.setItem(0,10, QtWidgets.QTableWidgetItem("ssh-salt"))
        self.tableWidget.setItem(0,11, QtWidgets.QTableWidgetItem("os-id"))
        self.tableWidget.setItem(0,12, QtWidgets.QTableWidgetItem("passport id"))
        self.tableWidget.setItem(0,13, QtWidgets.QTableWidgetItem("platform_pk"))
        for i in range(len(self.clouds)):
            for j in range(13):
                self.tableWidget.setItem(i+1, j, QtWidgets.QTableWidgetItem(str(self.clouds[i][j])))

    def select_os(self, i):
        print(self.os_list[i].name)

    def get_platform(self):
        self.platforms.clear()
        record = list(self.data_base.select_platform())
        self.platform_table.setColumnCount(1)
        self.platform_table.setRowCount(len(record))
        if len(record) > 0:
            i=0
            for item in record:
                self.platforms.append(
                    PlatformData(ram=item[2], platform_pk=item[0], storage=item[1], cpu_core=item[3], cpu_rate=item[4],
                                             bandwidth=item[5]))
                self.platform_table.setItem(0, i, QtWidgets.QTableWidgetItem(str(item[0])))
                i = i + 1

    def selected_os_radio_btn(self):
        if self.selected.isChecked():
            self.add_or_remove.setText("remove")
            self.plaform_select()

        if self.unselected.isChecked():
            self.add_or_remove.setText("add")
            self.plaform_select()

    def add_os_to_platform(self):
        if self.unselected.isChecked():
            os_table =self.os_table.currentRow()
            os_id = self.os_list[os_table].os_id
            plat = self.platform_table.currentRow()
            platform_id = self.platforms[plat].platform_pk
            self.data_base.dependency_insert_table(os_id=os_id,platform_pk=platform_id)
            self.selected_os_radio_btn()
        if self.selected.isChecked():
            os_table = self.os_table.currentRow()
            os_id = self.os_list[os_table].os_id
            plat = self.platform_table.currentRow()
            platform_id = self.platforms[plat].platform_pk
            self.data_base.dependency_delete_table(os_id=os_id, platform_pk=platform_id)
            self.selected_os_radio_btn()

    def update_platform_method(self):
        ram = self.ram_platform.text()
        core = self.core_platform.text()
        rate = self.ram_platform.text()
        storage = self.storage_platform.text()
        bandwidth = self.bandwidth_platform.text()
        platform_pk = self.platforms[self.platform_table.currentRow()].platform_pk
        self.data_base.update_platform(ram, core ,rate, storage, bandwidth, platform_pk)
        self.get_platform()

    def all_snapshot(self):
        self.snapshotR = self.data_base.all_snapShot(self.clouds[self.tableWidget.currentRow()-1][0])
        self.update_snapshot_table()

    def add_snapshot_function(self):
        self.data_base.snapshots_insert_table(self.clouds[self.tableWidget.currentRow()-1][0])
        self.all_snapshot()

    def update_snapshot_table(self):
        self.snapshot_table.setRowCount(len(self.snapshotR)+1)
        self.snapshot_table.setColumnCount(4)
        self.snapshot_table.setItem(0, 0, QtWidgets.QTableWidgetItem("snapshot_id"))
        self.snapshot_table.setItem(0, 1, QtWidgets.QTableWidgetItem("cloud_id"))
        self.snapshot_table.setItem(0, 2, QtWidgets.QTableWidgetItem("create time"))
        self.snapshot_table.setItem(0, 3, QtWidgets.QTableWidgetItem("size"))
        for i in range(len(self.snapshotR)):
            for j in range(4):
                self.snapshot_table.setItem(i+1, j, QtWidgets.QTableWidgetItem(str(self.snapshotR[i][j])))

    def delete_snapshot_table(self):
        if self.snapshot_table.currentRow()>0:
            self.data_base.snapshots_delete(self.snapshotR[self.snapshot_table.currentRow()-1][0])
            self.all_snapshot()

    def admin_user_platforms(self):
        index = self.user_table.currentRow()
        if index > 0:
            self.passportid = self.all_user[index-1][2]

        self.navigate_update_cloud(is_admin=self.user.is_admin, passport_id=self.passportid)

    def admin_user_ticket(self):
        index = self.user_table.currentRow()
        if index > 0:
            self.passportid = self.all_user[index-1][2]

        self.navigate_tickets()

    def admin_update_user(self):

        index = self.user_table.currentRow()

        if index>0:
            user = self.all_user[index - 1]
            self.settings_name.setText(user[0])
            self.settings_family.setText(user[1])
            self.settings_balance.setText(str(user[5]))
            self.settings_passportid.setText(str(user[2]))
            self.settings_email.setText(user[3])
            self.update_user_function(is_admin=True)
            self.passportid = user[2]
        else:
            self.settings_name.setText(self.user.last_name)
            self.settings_family.setText(self.user.last_name)
            self.settings_balance.setText(str(self.user.account_balance))
            self.settings_passportid.setText(str(self.user.passport_id))
            self.settings_email.setText(self.user.email)
        self.navigate_settings(is_admin=self.user.is_admin)



    def selectionchangeComboBox(self):
        index = self.ticket_status_select.currentIndex()
        if index == 0:
            self.get_all_tickets()
        else:
            self.get_status_ticket(status=index-1)
        # print("stetst")

    def __init__(self):
        self.data_base = Database()
        self.user = User(first_name="", last_name="", passport_id=0, is_admin=False, email="", join_date="",
                         account_balance=0, password="")
        self.get_os()
        # for create platform
        self.operating_system = list()
        # for show all platform
        self.operating_system1: list[QtWidgets.QRadioButton]
        self.platforms = list()
        self.passportid =0



if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
